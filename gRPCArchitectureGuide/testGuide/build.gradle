buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.9.4'
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.tistory.roobistory'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '21'
}

apply plugin: 'java'
apply plugin: 'com.google.protobuf'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation 'io.grpc:grpc-netty:1.56.1'
    implementation 'io.grpc:grpc-protobuf:1.56.1'
    implementation 'io.grpc:grpc-stub:1.56.1'
    implementation 'com.google.protobuf:protobuf-javalite:3.22.2'
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.9.2'
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.56.1'
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}

jar {
    manifest {
        attributes "Main-Class": "testGuideInfoServer"
    }
    from {
        configurations.compileClasspath.collect{ it.isDirectory() ? it : zipTree(it)}

    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

apply plugin: 'application'
startScripts.enabled = false

test {
    useJUnitPlatform()
}
